// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TransactionType {
  id        Int           @id @default(autoincrement())
  name      String
  in_or_out Boolean      // true for incoming, false for outgoing
  transactions Transaction[]

  @@map("transaction_types")
}

model Currency {
  id       Int       @id @default(autoincrement())
  name     String
  accounts Account[]

  @@map("currencies")
}

model Transaction {
  id                Int             @id @default(autoincrement())
  amount           Decimal         @db.Decimal(15, 2)
  createdAt        DateTime        @default(now())
  
  // Relations
  type             TransactionType @relation(fields: [typeId], references: [id])
  typeId           Int

  recipientAccount Account         @relation("ReceivedTransactions", fields: [recipientAccountId], references: [id])
  recipientAccountId Int

  senderAccount    Account         @relation("SentTransactions", fields: [senderAccountId], references: [id])
  senderAccountId  Int

  @@index([typeId])
  @@index([recipientAccountId])
  @@index([senderAccountId])
  @@map("transactions")
}

model Account {
  id         Int      @id @default(autoincrement())
  name       String
  createdAt  DateTime @default(now())
  
  // Relations
  owner      User     @relation(fields: [ownerId], references: [id])
  ownerId    Int
  
  currency   Currency @relation(fields: [currencyId], references: [id])
  currencyId Int

  // Transactions relations
  receivedTransactions Transaction[] @relation("ReceivedTransactions")
  sentTransactions     Transaction[] @relation("SentTransactions")

  @@index([ownerId])
  @@index([currencyId])
  @@map("accounts")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  accounts  Account[]

  @@map("users")
}