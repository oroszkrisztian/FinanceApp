{"version":3,"file":"expenseNotificationService.js","sourceRoot":"","sources":["../../../src/services/expenseNotificationService.ts"],"names":[],"mappings":"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","sourcesContent":["import { PrismaClient, RecurringFundAndBill, User, Account, CustomCategory } from '@prisma/client';\nimport BrevoEmailService, { TransactionalEmailData } from './brevoService';\n\nconst prisma = new PrismaClient();\n\ninterface UpcomingPayment extends RecurringFundAndBill {\n  account: Account & {\n    user: User;\n  };\n  user: User[];\n  categories: Array<{\n    customCategory: CustomCategory;\n  }>;\n}\n\ninterface NotificationResult {\n  success: number;\n  failed: number;\n  details?: Array<{\n    paymentName: string;\n    userEmail: string;\n    status: 'success' | 'failed';\n    error?: string;\n    type: 'INCOME' | 'EXPENSE';\n  }>;\n}\n\nclass ExpenseNotificationService {\n  private brevoService: BrevoEmailService;\n  private senderEmail: string;\n  private senderName: string;\n\n  constructor(brevoApiKey: string, senderEmail?: string, senderName?: string) {\n    this.brevoService = new BrevoEmailService(brevoApiKey);\n    this.senderEmail = senderEmail || process.env.BREVO_SENDER_EMAIL || 'noreply@yourapp.com';\n    this.senderName = senderName || process.env.BREVO_SENDER_NAME || 'Your Finance App';\n  }\n\n  async sendDailyScheduledNotifications(): Promise<NotificationResult> {\n    let successCount = 0;\n    let failedCount = 0;\n    const details: NotificationResult['details'] = [];\n\n    try {\n      const paymentsWithNotifications = await prisma.recurringFundAndBill.findMany({\n        where: {\n          isActive: true,\n          emailNotification: true,\n          nextExecution: {\n            not: null\n          },\n          deletedAt: null\n        },\n        include: {\n          account: {\n            include: {\n              user: true\n            }\n          },\n          user: true,\n          categories: {\n            include: {\n              customCategory: true\n            }\n          }\n        }\n      });\n\n\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n\n      for (const payment of paymentsWithNotifications as UpcomingPayment[]) {\n        if (!payment.nextExecution) continue;\n\n        const notificationDaysAhead = payment.notificationDay || this.getDefaultNotificationDays(payment);\n        \n        const dueDate = new Date(payment.nextExecution);\n        dueDate.setHours(0, 0, 0, 0);\n        \n        const notificationDate = new Date(dueDate);\n        notificationDate.setDate(dueDate.getDate() - notificationDaysAhead);\n        \n        if (today.getTime() === notificationDate.getTime()) {\n          const user = payment.account.user;\n          \n          try {\n            await this.sendPaymentNotification(payment, user);\n            successCount++;\n            details.push({\n              paymentName: payment.name,\n              userEmail: user.email,\n              status: 'success',\n              type: payment.type\n            });\n            \n            \n            await new Promise(resolve => setTimeout(resolve, 200));\n          } catch (error) {\n            failedCount++;\n            const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n            details.push({\n              paymentName: payment.name,\n              userEmail: user.email,\n              status: 'failed',\n              error: errorMessage,\n              type: payment.type\n            });\n            \n            console.error(`Failed to send notification for ${payment.name}:`, errorMessage);\n          }\n        }\n      }\n\n      console.log(`Daily notification summary: ${successCount} sent, ${failedCount} failed`);\n      return { success: successCount, failed: failedCount, details };\n      \n    } catch (error) {\n      console.error('Error in sendDailyScheduledNotifications:', error);\n      throw error;\n    }\n  }\n\n  private getDefaultNotificationDays(payment: UpcomingPayment): number {\n    switch (payment.frequency) {\n      case 'DAILY':\n        return 1; \n      case 'WEEKLY':\n        return 2; \n      case 'BIWEEKLY':\n        return 3; \n      case 'MONTHLY':\n        return 3; \n      case 'QUARTERLY':\n        return 7; \n      case 'YEARLY':\n        return 14; \n      case 'ONCE':\n        return 3; \n      case 'CUSTOM':\n        return 3; \n      default:\n        return 3; \n    }\n  }\n\n  async sendPaymentNotification(payment: UpcomingPayment, user: User): Promise<void> {\n    if (!payment.nextExecution) {\n      throw new Error('Payment has no next execution date');\n    }\n\n    const daysUntilDue = Math.ceil(\n      (new Date(payment.nextExecution).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24)\n    );\n\n    const categoryNames = payment.categories\n      .map(cat => cat.customCategory.name)\n      .join(', ') || 'Uncategorized';\n\n    const isIncome = payment.type === 'INCOME';\n    const urgencyColor = isIncome \n      ? (daysUntilDue <= 1 ? '#28a745' : daysUntilDue <= 3 ? '#20c997' : '#17a2b8')\n      : (daysUntilDue <= 1 ? '#dc3545' : daysUntilDue <= 3 ? '#fd7e14' : '#e74c3c');\n    \n    const urgencyText = isIncome\n      ? (daysUntilDue <= 1 ? '💰 Income Due Soon!' : daysUntilDue <= 3 ? '💰 Income This Week' : '📅 Upcoming Income')\n      : (daysUntilDue <= 1 ? '🚨 Expense Due Soon!' : daysUntilDue <= 3 ? '⚠️ Expense Due This Week' : '📅 Upcoming Expense');\n\n    const actionText = isIncome \n      ? 'You will receive this income in your account'\n      : 'Ensure sufficient funds are available in your account';\n\n    const emailData: TransactionalEmailData = {\n      sender: { \n        name: this.senderName, \n        email: this.senderEmail \n      },\n      to: [{ \n        email: user.email, \n        name: `${user.firstName} ${user.lastName}` \n      }],\n      subject: `${urgencyText} ${payment.name} - ${payment.amount} ${payment.currency}`,\n      htmlContent: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: white;\">\n          <!-- Header -->\n          <div style=\"background-color: ${urgencyColor}; padding: 20px; text-align: center;\">\n            <h1 style=\"color: white; margin: 0; font-size: 20px;\">${urgencyText}</h1>\n          </div>\n          \n          <!-- Content -->\n          <div style=\"padding: 30px;\">\n            <h2 style=\"color: #333; margin-top: 0;\">${payment.name}</h2>\n            \n            <table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\">\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Amount:</td>\n                <td style=\"padding: 10px 0; text-align: right; color: ${urgencyColor}; font-weight: bold;\">\n                  ${isIncome ? '+' : ''}${payment.amount} ${payment.currency}\n                </td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Due Date:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">\n                  ${new Date(payment.nextExecution).toLocaleDateString('en-US', { \n                    weekday: 'short', \n                    year: 'numeric', \n                    month: 'short', \n                    day: 'numeric' \n                  })}\n                </td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Days Until Due:</td>\n                <td style=\"padding: 10px 0; text-align: right; color: ${urgencyColor}; font-weight: bold;\">\n                  ${daysUntilDue} day${daysUntilDue !== 1 ? 's' : ''}\n                </td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Account:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${payment.account.name}</td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Type:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${isIncome ? 'Income' : 'Expense'}</td>\n              </tr>\n              <tr>\n                <td style=\"padding: 10px 0; font-weight: bold;\">Frequency:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${payment.frequency}</td>\n              </tr>\n            </table>\n\n            ${payment.description ? `\n              <div style=\"margin: 20px 0; padding: 15px; background-color: #f9f9f9; border-radius: 5px;\">\n                <strong>Description:</strong><br>\n                ${payment.description}\n              </div>\n            ` : ''}\n\n            <div style=\"margin: 30px 0; padding: 15px; background-color: ${isIncome ? '#e8f5e8' : '#fff8e1'}; border-radius: 5px;\">\n              <p style=\"margin: 0; color: #666;\">\n                <strong>💡 Reminder:</strong> ${actionText} (${payment.account.name}).\n              </p>\n            </div>\n          </div>\n          \n          <!-- Footer -->\n          <div style=\"background-color: #f5f5f5; padding: 20px; text-align: center; color: #888; font-size: 12px;\">\n            <p style=\"margin: 0;\">You're receiving this because you enabled notifications for this recurring ${payment.type.toLowerCase()}.</p>\n            <p style=\"margin: 5px 0 0 0;\">© ${new Date().getFullYear()} Your Finance App. All rights reserved.</p>\n          </div>\n        </div>\n      `,\n      textContent: `\n${urgencyText}\n\n${payment.name}\nAmount: ${isIncome ? '+' : ''}${payment.amount} ${payment.currency}\nDue Date: ${new Date(payment.nextExecution).toLocaleDateString()}\nDays Until Due: ${daysUntilDue} day${daysUntilDue !== 1 ? 's' : ''}\nAccount: ${payment.account.name}\nType: ${payment.type}\nFrequency: ${payment.frequency}\n${payment.description ? `Description: ${payment.description}` : ''}\n\n💡 Reminder: ${actionText} (${payment.account.name}).\n\nYou're receiving this because you enabled notifications for this recurring ${payment.type.toLowerCase()}.\n      `,\n      tags: [`${payment.type.toLowerCase()}-notification`, `days-${daysUntilDue}`, payment.frequency.toLowerCase()]\n    };\n\n    try {\n      await this.brevoService.sendTransactionalEmail(emailData);\n    } catch (error) {\n      console.error(`Failed to send notification for ${payment.type.toLowerCase()} ${payment.name}:`, error);\n      throw error;\n    }\n  }\n}\n\nexport default ExpenseNotificationService;\nexport type { UpcomingPayment, NotificationResult };"]}