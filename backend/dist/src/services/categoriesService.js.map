{"version":3,"file":"categoriesService.js","sourceRoot":"","sources":["../../../src/services/categoriesService.ts"],"names":[],"mappings":";;;AAAA,+EAA4E;AAE5E,MAAa,iBAAiB;IACpB,oBAAoB,CAAuB;IACnD;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,2CAAoB,EAAE,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,sBAAsB;QAC1B,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE,CAAC;QAClE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,oDAAoD,EAAE,KAAK,CAAC,CAAC;YACzE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IACD,KAAK,CAAC,uBAAuB,CAAC,MAAa;QACzC,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACzE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,qDAAqD,EAAE,KAAK,CAAC,CAAC;YAC1E,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAa,EAAC,YAAmB;QACxD,IAAI,CAAC;YACH,OAAO,MAAM,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,MAAM,EAAC,YAAY,CAAC,CAAC;QACjF,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,KAAK,CAAC,CAAC;YACrE,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;CAEF;AAhCD,8CAgCC","sourcesContent":["import { CategoriesRepository } from \"../repositories/categoriesRepository\";\n\nexport class CategoriesService {\n  private categoriesRepository: CategoriesRepository;\n  constructor() {\n    this.categoriesRepository = new CategoriesRepository();\n  }\n\n  async getAllSystemCategories() {\n    try {\n      return await this.categoriesRepository.getAllSystemCategories();\n    } catch (error) {\n      console.log(\"Error in CategoriesService.getAllSystemCategories:\", error);\n      throw new Error(\"Failed to get system categories\");\n    }\n  }\n  async getAllCategoriesForUser(userId:number){\n    try {\n      return await this.categoriesRepository.getAllCategoriesForUser(userId);\n    } catch (error) {\n      console.log(\"Error in CategoriesService.getAllCategoriesForUser:\", error);\n      throw new Error(\"Failed to get all categories\");\n    }\n  }\n\n  async createUserCategory(userId:number,categoryName:string){\n    try {\n      return await this.categoriesRepository.createUserCategory(userId,categoryName);\n    } catch (error) {\n      console.log(\"Error in CategoriesService.createUserCategory:\", error);\n      throw new Error(\"Failed to create user category\");\n    }\n  }\n\n}\n"]}