{"version":3,"file":"automaticPaymentService.js","sourceRoot":"","sources":["../../../src/services/automaticPaymentService.ts"],"names":[],"mappings":"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","sourcesContent":["import { PrismaClient, PaymentType } from \"@prisma/client\";\nimport { TransactionRepository } from \"../repositories/transactionRepository\";\nimport BrevoEmailService, { TransactionalEmailData } from \"./brevoService\";\n\ninterface AutomaticPaymentResult {\n  processed: number;\n  failed: number;\n  details: Array<{\n    paymentId: number;\n    paymentName: string;\n    amount: number;\n    currency: string;\n    type: PaymentType;\n    status: 'success' | 'failed';\n    error?: string;\n    transactionId?: number;\n  }>;\n}\n \nexport default class AutomaticPaymentService {\n  private prisma: PrismaClient;\n  private transactionRepo: TransactionRepository;\n  private brevoService: BrevoEmailService;\n  private senderEmail: string;\n  private senderName: string;\n\n  constructor() {\n    this.prisma = new PrismaClient();\n    this.transactionRepo = new TransactionRepository();\n    this.brevoService = new BrevoEmailService(process.env.BREVO_API_KEY!);\n    this.senderEmail = process.env.BREVO_SENDER_EMAIL || \"noreply@yourfinanceapp.com\";\n    this.senderName = process.env.BREVO_SENDER_NAME || \"Your Finance App\";\n  }\n\n  async processAutomaticPayments(): Promise<AutomaticPaymentResult> {\n    const results: AutomaticPaymentResult = {\n      processed: 0,\n      failed: 0,\n      details: [],\n    };\n\n    try {\n      const duePayments = await this.prisma.recurringFundAndBill.findMany({\n        where: {\n          isActive: true,\n          automaticAddition: true,\n          deletedAt: null,\n          nextExecution: {\n            lte: new Date(),\n          },\n        },\n        include: {\n          account: true,\n          user: true,\n          categories: {\n            include: {\n              customCategory: true,\n            },\n            where: {\n              deletedAt: null,\n            },\n          },\n        },\n      });\n\n\n      for (const payment of duePayments) {\n        try {\n          const categoryIds = payment.categories.map(cat => cat.customCategoryId);\n          let transactionId: number;\n\n          if (payment.type === PaymentType.EXPENSE) {\n            const transaction = await this.transactionRepo.executeRecurringPayment(\n              payment.user[0].id,\n              payment.id,\n              payment.amount,\n              payment.currency,\n              payment.accountId,\n              payment.name,\n              payment.description,\n              categoryIds.length > 0 ? categoryIds : null\n            );\n            transactionId = transaction.id;\n          } else {\n            const transaction = await this.transactionRepo.executeRecurringIncome(\n              payment.user[0].id,\n              payment.id,\n              payment.amount,\n              payment.currency,\n              payment.accountId,\n              payment.name,\n              payment.description,\n              categoryIds.length > 0 ? categoryIds : null\n            );\n            transactionId = transaction.id;\n          }\n\n          results.processed++;\n          results.details.push({\n            paymentId: payment.id,\n            paymentName: payment.name,\n            amount: payment.amount,\n            currency: payment.currency,\n            type: payment.type,\n            status: 'success',\n            transactionId: transactionId,\n          });\n\n          try {\n            const user = payment.user[0];\n            await this.sendPaymentConfirmationEmail(payment, user, transactionId);\n          } catch (emailError) {\n            console.error(`Failed to send confirmation email for ${payment.name}:`, emailError);\n          }\n\n\n        } catch (error) {\n          results.failed++;\n          const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n          results.details.push({\n            paymentId: payment.id,\n            paymentName: payment.name,\n            amount: payment.amount,\n            currency: payment.currency,\n            type: payment.type,\n            status: 'failed',\n            error: errorMessage,\n          });\n\n          console.error(`Failed to process automatic ${payment.type.toLowerCase()} ${payment.name} (ID: ${payment.id}):`, errorMessage);\n        }\n      }\n\n      return results;\n\n    } catch (error) {\n      console.error(\"Error in processAutomaticPayments:\", error);\n      throw error;\n    }\n  }\n\n  private async sendPaymentConfirmationEmail(payment: any, user: any, transactionId: number): Promise<void> {\n    const isIncome = payment.type === PaymentType.INCOME;\n    const themeColor = isIncome ? '#28a745' : '#dc3545';\n    const bgColor = isIncome ? '#e8f5e8' : '#ffeaea';\n    const icon = isIncome ? '💰' : '💸';\n    const actionText = isIncome ? 'received in' : 'deducted from';\n    const typeText = isIncome ? 'Income' : 'Expense';\n\n    const categoryNames = payment.categories\n      .map((cat: any) => cat.customCategory.name)\n      .join(', ') || 'Uncategorized';\n\n    const emailData: TransactionalEmailData = {\n      sender: { \n        name: this.senderName, \n        email: this.senderEmail \n      },\n      to: [{ \n        email: user.email, \n        name: `${user.firstName} ${user.lastName}` \n      }],\n      subject: `${icon} Automatic ${typeText} Processed - ${payment.name}`,\n      htmlContent: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: white;\">\n          <div style=\"background-color: ${themeColor}; padding: 20px; text-align: center;\">\n            <h1 style=\"color: white; margin: 0; font-size: 20px;\">${icon} Automatic ${typeText} Processed</h1>\n          </div>\n          \n          <div style=\"padding: 30px;\">\n            <h2 style=\"color: #333; margin-top: 0;\">${payment.name}</h2>\n            \n            <div style=\"margin: 20px 0; padding: 20px; background-color: ${bgColor}; border-radius: 8px; border-left: 4px solid ${themeColor};\">\n              <p style=\"margin: 0; font-size: 16px; color: #333;\">\n                <strong>${isIncome ? '+' : '-'}${payment.amount} ${payment.currency}</strong> has been automatically ${actionText} your <strong>${payment.account.name}</strong> account.\n              </p>\n            </div>\n            \n            <table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\">\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Transaction ID:</td>\n                <td style=\"padding: 10px 0; text-align: right; color: #666;\">#${transactionId}</td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Amount:</td>\n                <td style=\"padding: 10px 0; text-align: right; color: ${themeColor}; font-weight: bold;\">\n                  ${isIncome ? '+' : '-'}${payment.amount} ${payment.currency}\n                </td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Date:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">\n                  ${new Date().toLocaleDateString('en-US', { \n                    weekday: 'short', \n                    year: 'numeric', \n                    month: 'short', \n                    day: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })}\n                </td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Account:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${payment.account.name}</td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Type:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${typeText}</td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Categories:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${categoryNames}</td>\n              </tr>\n              <tr>\n                <td style=\"padding: 10px 0; font-weight: bold;\">Frequency:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${payment.frequency}</td>\n              </tr>\n            </table>\n\n            ${payment.description ? `\n              <div style=\"margin: 20px 0; padding: 15px; background-color: #f9f9f9; border-radius: 5px;\">\n                <strong>Description:</strong><br>\n                ${payment.description}\n              </div>\n            ` : ''}\n\n            <div style=\"margin: 30px 0; padding: 15px; background-color: #f0f8ff; border-radius: 5px;\">\n              <p style=\"margin: 0; color: #666;\">\n                <strong>💡 Note:</strong> This transaction was processed automatically based on your recurring ${payment.type.toLowerCase()} schedule.\n              </p>\n            </div>\n\n            ${payment.nextExecution && payment.frequency !== 'ONCE' ? `\n              <div style=\"margin: 20px 0; padding: 15px; background-color: #fff8e1; border-radius: 5px;\">\n                <p style=\"margin: 0; color: #666;\">\n                  <strong>📅 Next automatic ${payment.type.toLowerCase()}:</strong> ${new Date(payment.nextExecution).toLocaleDateString('en-US', { \n                    weekday: 'long', \n                    year: 'numeric', \n                    month: 'long', \n                    day: 'numeric' \n                  })}\n                </p>\n              </div>\n            ` : ''}\n\n            ${payment.frequency === 'ONCE' ? `\n              <div style=\"margin: 20px 0; padding: 15px; background-color: #e8f4fd; border-radius: 5px;\">\n                <p style=\"margin: 0; color: #666;\">\n                  <strong>✅ One-time payment:</strong> This was a one-time automatic ${payment.type.toLowerCase()} and will not repeat.\n                </p>\n              </div>\n            ` : ''}\n          </div>\n          \n          <div style=\"background-color: #f5f5f5; padding: 20px; text-align: center; color: #888; font-size: 12px;\">\n            <p style=\"margin: 0;\">This is an automated confirmation for your recurring ${payment.type.toLowerCase()}.</p>\n            <p style=\"margin: 5px 0 0 0;\">© ${new Date().getFullYear()} Your Finance App. All rights reserved.</p>\n          </div>\n        </div>\n      `,\n      textContent: `\n${icon} Automatic ${typeText} Processed\n\n${payment.name}\nTransaction ID: #${transactionId}\nAmount: ${isIncome ? '+' : '-'}${payment.amount} ${payment.currency}\nDate: ${new Date().toLocaleDateString()}\nAccount: ${payment.account.name}\nType: ${typeText}\nCategories: ${categoryNames}\nFrequency: ${payment.frequency}\n${payment.description ? `Description: ${payment.description}` : ''}\n\n${isIncome ? '+' : '-'}${payment.amount} ${payment.currency} has been automatically ${actionText} your ${payment.account.name} account.\n\nThis transaction was processed automatically based on your recurring ${payment.type.toLowerCase()} schedule.\n${payment.nextExecution ? `Next automatic ${payment.type.toLowerCase()}: ${new Date(payment.nextExecution).toLocaleDateString()}` : ''}\n      `,\n      tags: [`automatic-${payment.type.toLowerCase()}`, `transaction-${transactionId}`, payment.frequency.toLowerCase()]\n    };\n\n    await this.brevoService.sendTransactionalEmail(emailData);\n  }\n}"]}