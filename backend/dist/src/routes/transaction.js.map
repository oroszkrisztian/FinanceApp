{"version":3,"file":"transaction.js","sourceRoot":"","sources":["../../../src/routes/transaction.ts"],"names":[],"mappings":"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","sourcesContent":["import { Hono } from \"hono\";\nimport { TransactionController } from \"../controllers/transactionController\";\nimport { verifyToken } from \"../middleware/auth\";\n\nconst transaction = new Hono();\nconst transactionController = new TransactionController();\n\ntransaction.use(\"*\", verifyToken);\n\ntransaction.post(\"/getUserAllTransactions\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n\n    return await transactionController.getUserAllTransactions(c, userId);\n  } catch (error) {\n    console.error(\"Error in /getUserAllTransactions route:\", error);\n\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/addFundDefaultAccount\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { name, description, amount, type, toAccountId, currency, customCategoriesId } = body;\n\n    if (!name || !amount || !type || !toAccountId) {\n      return c.json(\n        {\n          error: \"Missing required fields (name, amount, type, toAccountId)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    return await transactionController.addFundsDefaultAccount(\n      c,\n      userId,\n      name,\n      description || null,\n      amount,\n      type,\n      toAccountId,\n      customCategoriesId || null,\n      currency\n    );\n  } catch (error) {\n    console.error(\"Error in /addFundDefaultAccount route:\", error);\n\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/addFundSaving\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { amount, fromAccountId, toSavingId, type, currency } = body;\n\n    if (!fromAccountId || !toSavingId) {\n      return c.json(\n        {\n          error: \"Missing required fields (amount, fromAccountId, toSavingId)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    return await transactionController.addFundsSaving(\n      c,\n      userId,\n      amount,\n      fromAccountId,\n      toSavingId,\n      type,\n      currency\n    );\n  } catch (error) {\n    console.error(\"Error in /addFundSaving route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/addFundDefault\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { amount, fromSavingId, toAccountId, type, currency } = body;\n\n    if (!fromSavingId || !toAccountId) {\n      return c.json(\n        {\n          error: \"Missing required fields (amount, fromSavingId, toAccountId)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    return await transactionController.addFundsDefault(\n      c,\n      userId,\n      amount,\n      fromSavingId,\n      toAccountId,\n      type,\n      currency\n    );\n  } catch (error) {\n    console.error(\"Error in /addFundDefault route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/createExpense\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const {\n      name,\n      amount,\n      currency,\n      fromAccountId,\n      description,\n      customCategoriesId,\n    } = body;\n\n    if (!amount || !fromAccountId) {\n      return c.json(\n        {\n          error: \"Missing required fields (amount, fromAccountId)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    if (customCategoriesId && !Array.isArray(customCategoriesId)) {\n      return c.json({ error: \"customCategoriesId must be an array\" }, 400);\n    }\n\n    return await transactionController.createExpense(\n      c,\n      userId,\n      name || null,\n      amount,\n      currency,\n      fromAccountId,\n      description || null,\n      customCategoriesId || null\n    );\n  } catch (error) {\n    console.error(\"Error in /createExpense route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/transferFundsDefault\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { amount, fromAccountId, toAccountId, type, currency } = body;\n\n    if (!fromAccountId || !toAccountId) {\n      return c.json(\n        {\n          error: \"Missing required fields (amount, fromAccountId, toAccountId)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    return await transactionController.transferFundsDefault(\n      c,\n      userId,\n      amount,\n      fromAccountId,\n      toAccountId,\n      type,\n      currency\n    );\n  } catch (error) {\n    console.error(\"Error in /transferFundsDefault route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/executeRecurringPayment\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const {\n      paymentId,\n      amount,\n      currency,\n      fromAccountId,\n      name,\n      description,\n      customCategoriesId,\n    } = body;\n\n    if (!paymentId || !amount || !fromAccountId || !name) {\n      return c.json(\n        {\n          error: \"Missing required fields (paymentId, amount, fromAccountId, name)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    return await transactionController.executeRecurringPayment(\n      c,\n      userId,\n      paymentId,\n      amount,\n      currency,\n      fromAccountId,\n      name,\n      description || null,\n      customCategoriesId || null\n    );\n  } catch (error) {\n    console.error(\"Error in /executeRecurringPayment route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ntransaction.post(\"/executeRecurringIncome\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const {\n      paymentId,\n      amount,\n      currency,\n      toAccountId,\n      name,\n      description,\n      customCategoriesId,\n    } = body;\n\n    if (!paymentId || !amount || !toAccountId || !name) {\n      return c.json(\n        {\n          error: \"Missing required fields (paymentId, amount, toAccountId, name)\",\n        },\n        400\n      );\n    }\n\n    if (!currency) {\n      return c.json({\n        error: \"Missing currency\",\n      });\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    return await transactionController.executeRecurringIncome(\n      c,\n      userId,\n      paymentId,\n      amount,\n      currency,\n      toAccountId,\n      name,\n      description || null,\n      customCategoriesId || null\n    );\n  } catch (error) {\n    console.error(\"Error in /executeRecurringIncome route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nexport default transaction;"]}