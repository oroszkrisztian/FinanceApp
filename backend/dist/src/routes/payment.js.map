{"version":3,"file":"payment.js","sourceRoot":"","sources":["../../../src/routes/payment.ts"],"names":[],"mappings":"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","sourcesContent":["import { Hono } from \"hono\";\nimport { PaymentsController } from \"../controllers/paymentController\";\nimport { verifyToken } from \"../middleware/auth\";\n\nconst payments = new Hono();\nconst paymentsController = new PaymentsController();\n\npayments.use(\"*\", verifyToken);\n\npayments.post(\"/createPayment\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { \n      name, \n      amount, \n      description,\n      accountId, \n      startDate, \n      frequency, \n      emailNotification,\n      notificationDay,\n      automaticPayment,\n      type, \n      currency, \n      categoriesId,\n      paymentId \n    } = body;\n\n    if (\n      !name ||\n      !amount ||\n      !accountId ||\n      !startDate ||\n      !frequency ||\n      !type ||\n      !currency\n    ) {\n      return c.json(\n        {\n          error:\n            \"Missing required fields (name, amount, accountId, frequency, type, currency)\",\n        },\n        400\n      );\n    }\n\n    if (typeof amount !== \"number\" || amount <= 0) {\n      return c.json({ error: \"Amount must be a positive number\" }, 400);\n    }\n\n    if (categoriesId && !Array.isArray(categoriesId)) {\n      return c.json({ error: \"categoriesId must be an array\" }, 400);\n    }\n\n    const result = await paymentsController.createPayment(\n      c,\n      userId,\n      name,\n      amount,\n      description,\n      accountId,\n      new Date(startDate),\n      frequency,\n      emailNotification || false,\n      notificationDay || 0,\n      automaticPayment || false,\n      type,\n      currency,\n      categoriesId,\n      paymentId\n    );\n    \n    return result;\n  } catch (error) {\n    console.error(\"Error in /createPayment route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\npayments.post(\"/getAllPayments\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n\n    const result = await paymentsController.getAllPayments(c, userId);\n    return result;\n  } catch (error) {\n    console.error(\"Error in /getAllPayments route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\npayments.delete(\"/deletePayment\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { paymentId } = body;\n\n    if (!paymentId) {\n      return c.json(\n        { error: \"Missing required field (paymentId)\" },\n        400\n      );\n    }\n\n    const result = await paymentsController.deletePayment(c, userId, Number(paymentId));\n    return result;\n  } catch (error) {\n    console.error(\"Error in /deletePayment route:\", error);\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nexport default payments;"]}