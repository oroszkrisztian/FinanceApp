{"version":3,"file":"budget.js","sourceRoot":"","sources":["../../../src/routes/budget.ts"],"names":[],"mappings":"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","sourcesContent":["import { Hono } from \"hono\";\nimport { BudgetController } from \"../controllers/budgetControllers\";\nimport { verifyToken } from \"../middleware/auth\";\n\nconst budget = new Hono();\nconst budgetController = new BudgetController();\n\nbudget.use(\"*\", verifyToken);\n\nbudget.post(\"/getAllUserBudgets\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n\n    const budgets = await budgetController.getAllBudgets(c, userId);\n\n    console.log(\"Sending budgets to client:\", budgets);\n\n    return c.json(budgets);\n  } catch (error) {\n    console.error(\"Error in /getAllUserBudgets route:\", error);\n\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nbudget.post(\"/createUserBudgetWithCategories\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { name, limitAmount, currency, categoryIds } = body;\n\n    const budget = await budgetController.createUserBudgetWithCategories(\n      c,\n      userId,\n      name,\n      limitAmount,\n      currency,\n      categoryIds\n    );\n\n    console.log(\"Sending created budget to client:\", budget);\n\n    return c.json(budget);\n  } catch (error) {\n    console.error(\"Error in /createUserBudgetWithCategories route:\", error);\n\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nbudget.post(\"/deleteUserBudget\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { budgetId } = body;\n\n    const budget = await budgetController.deleteUserBudget(\n      c,\n      userId,\n      Number(budgetId)\n    );\n    console.log(\"Sending deleted budget to client:\", budget);\n    return c.json(budget);\n  } catch (error) {\n    console.error(\"Error in /deleteUserBudget route:\", error);\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nbudget.post(\"/updateUserBudget\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { budgetId, name, limitAmount, currency, categoryIds } = body;\n\n    const budget = await budgetController.updateUserBudget(\n      c,\n      userId,\n      Number(budgetId),\n      name,\n      limitAmount,\n      currency,\n      categoryIds\n    );\n\n    console.log(\"Sending updated budget to client:\", budget);\n\n    return c.json(budget);\n  } catch (error) {\n    console.error(\"Error in /updateUserBudget route:\", error);\n\n    if (error instanceof Error) {\n      return c.json({ error: error.message }, 500);\n    }\n\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nexport default budget;"]}