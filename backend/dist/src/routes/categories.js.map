{"version":3,"file":"categories.js","sourceRoot":"","sources":["../../../src/routes/categories.ts"],"names":[],"mappings":";;AAAA,+BAA4B;AAC5B,8EAA2E;AAE3E,+EAA4E;AAC5E,6CAAiD;AAEjD,MAAM,UAAU,GAAG,IAAI,WAAI,EAAE,CAAC;AAC9B,MAAM,oBAAoB,GAAG,IAAI,2CAAoB,EAAE,CAAC;AACxD,MAAM,oBAAoB,GAAG,IAAI,2CAAoB,EAAE,CAAC;AAExD,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,kBAAW,CAAC,CAAC;AAEjC,UAAU,CAAC,IAAI,CAAC,0BAA0B,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;IACtD,IAAI,CAAC;QACH,MAAM,MAAM,GAAI,CAAS,CAAC,GAAG,CAAC,QAAQ,CAAW,CAAC;QAElD,MAAM,aAAa,GAAG,MAAM,oBAAoB,CAAC,uBAAuB,CACtE,CAAC,EACD,MAAM,CACP,CAAC;QACF,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,CAAC,CAAC;QACjE,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,EAAE,GAAG,CAAC,CAAC;IACzD,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,IAAI,CAAC,qBAAqB,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE;IACjD,IAAI,CAAC;QACH,MAAM,MAAM,GAAI,CAAS,CAAC,GAAG,CAAC,QAAQ,CAAW,CAAC;QAClD,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAChC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC;QAE9B,MAAM,MAAM,GAAG,MAAM,oBAAoB,CAAC,kBAAkB,CAC1D,CAAC,EACD,MAAM,EACN,YAAY,CACb,CAAC;QACF,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;QAC5D,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,EAAE,GAAG,CAAC,CAAC;IACzD,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,kBAAe,UAAU,CAAC","sourcesContent":["import { Hono } from \"hono\";\nimport { CategoriesController } from \"../controllers/categoriesController\";\nimport { TransactionRepository } from \"../repositories/transactionRepository\";\nimport { CategoriesRepository } from \"../repositories/categoriesRepository\";\nimport { verifyToken } from \"../middleware/auth\";\n\nconst categories = new Hono();\nconst categoriesController = new CategoriesController();\nconst categoriesRepository = new CategoriesRepository();\n\ncategories.use(\"*\", verifyToken);\n\ncategories.post(\"/getAllCategoriesForUser\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n\n    const allcategories = await categoriesController.getAllCategoriesForUser(\n      c,\n      userId\n    );\n    return c.json(allcategories);\n  } catch (error) {\n    console.error(\"Error in /getAllCategoriesForUser route:\", error);\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\ncategories.post(\"/createUserCategory\", async (c) => {\n  try {\n    const userId = (c as any).get(\"userId\") as number;\n    const body = await c.req.json();\n    const { categoryName } = body;\n\n    const result = await categoriesController.createUserCategory(\n      c,\n      userId,\n      categoryName\n    );\n    return c.json(result);\n  } catch (error) {\n    console.error(\"Error in /createUserCategory route:\", error);\n    return c.json({ error: \"Internal server error\" }, 500);\n  }\n});\n\nexport default categories;"]}