{"version":3,"file":"create-test-user.js","sourceRoot":"","sources":["../../../src/scripts/create-test-user.ts"],"names":[],"mappings":";;;;;AAAA,2CAA8C;AAC9C,wDAA8B;AAE9B,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AAElC,KAAK,UAAU,cAAc;IAC3B,IAAI,CAAC;QACH,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC3B,KAAK,EAAE;gBACL,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,CAAC;aAC3D;SACF,CAAC,CAAC;QAEH,MAAM,cAAc,GAAG,MAAM,kBAAM,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;QAC5D,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,IAAI,EAAE;gBACJ,SAAS,EAAE,MAAM;gBACjB,QAAQ,EAAE,MAAM;gBAChB,QAAQ,EAAE,UAAU;gBACpB,KAAK,EAAE,eAAe;gBACtB,QAAQ,EAAE,cAAc;aACzB;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE;YAC7C,GAAG,IAAI;YACP,QAAQ,EAAE,UAAU;SACrB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;YAAS,CAAC;QACT,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;AACH,CAAC;AAED,cAAc,EAAE,CAAC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nconst prisma = new PrismaClient();\n\nasync function createTestUser() {\n  try {\n    await prisma.user.deleteMany({\n      where: {\n        OR: [{ username: \"testuser\" }, { email: \"test@test.com\" }],\n      },\n    });\n\n    const hashedPassword = await bcrypt.hash(\"password123\", 10);\n    const user = await prisma.user.create({\n      data: {\n        firstName: \"Test\",\n        lastName: \"User\",\n        username: \"testuser\",\n        email: \"test@test.com\",\n        password: hashedPassword,\n      },\n    });\n\n    console.log(\"Test user created successfully:\", {\n      ...user,\n      password: \"[HASHED]\", \n    });\n  } catch (error) {\n    console.error(\"Error creating test user:\", error);\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n\ncreateTestUser();\n"]}