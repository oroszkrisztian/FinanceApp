{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { serve } from \"@hono/node-server\";\nimport { Hono } from \"hono\";\nimport { cors } from \"hono/cors\";\nimport { logger } from \"hono/logger\";\n\nimport accounts from \"./routes/accounts\";\nimport transaction from \"./routes/transaction\";\nimport categories from \"./routes/categories\";\nimport budget from \"./routes/budget\";\nimport payments from \"./routes/payment\";\nimport users from \"./routes/user\";\nimport auth from \"./routes/auth\";\nimport ai from \"./routes/ai\";\n\nimport \"dotenv/config\";\nimport SimplePaymentNotificationCron from \"./services/expenseNotificationCron\";\n\nconst app = new Hono();\nconst port = parseInt(process.env.PORT || \"3000\");\n\n// Initialize the payment notification cron job\nconst paymentCron = new SimplePaymentNotificationCron({\n  brevoApiKey: process.env.BREVO_API_KEY!,\n  senderEmail: process.env.BREVO_SENDER_EMAIL || \"noreply@yourfinanceapp.com\",\n  senderName: process.env.BREVO_SENDER_NAME || \"Your Finance App\",\n  timezone: process.env.TIMEZONE || \"Europe/Bucharest\",\n  dailyTime: process.env.DAILY_NOTIFICATION_TIME || \"08:00\", // 8:00 AM\n  enabled: process.env.NOTIFICATIONS_ENABLED !== \"false\", // Default to true unless explicitly disabled\n});\n\n// Middleware\napp.use(\n  \"*\",\n  cors({\n    origin: [\n      \"http://localhost:5173\",\n      \"http://127.0.0.1:5173\",\n      \"https://finance-app-frontend-bice.vercel.app\",\n    ],\n    allowMethods: [\"POST\", \"GET\", \"DELETE\", \"PUT\", \"OPTIONS\"],\n    allowHeaders: [\"Content-Type\", \"Authorization\"],\n    credentials: true,\n  })\n);\n\napp.use(\"*\", logger());\n\n// Mount routes\napp.route(\"/auth\", auth);\napp.route(\"/accounts\", accounts);\napp.route(\"/transaction\", transaction);\napp.route(\"/categories\", categories);\napp.route(\"/budget\", budget);\napp.route(\"/payment\", payments);\napp.route(\"/user\", users);\napp.route(\"/ai\", ai); \n\n// Test Gemini API connection\napp.get(\"/test-gemini\", async (c) => {\n  try {\n    if (!process.env.GEMINI_API_KEY) {\n      return c.json({\n        success: false,\n        error: \"GEMINI_API_KEY not configured\",\n      }, 500);\n    }\n\n    const { GoogleGenerativeAI } = await import(\"@google/generative-ai\");\n    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n    const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n    \n    const result = await model.generateContent(\"Say hello and confirm you're working correctly for financial analysis.\");\n    const response = await result.response;\n    const text = response.text();\n\n    return c.json({\n      success: true,\n      message: \"Gemini API connection successful\",\n      response: text,\n      config: {\n        apiKeyProvided: !!process.env.GEMINI_API_KEY,\n        keyPrefix: process.env.GEMINI_API_KEY ? process.env.GEMINI_API_KEY.substring(0, 10) + \"...\" : \"MISSING\",\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Gemini test failed:\", error);\n    return c.json({\n      success: false,\n      error: \"Gemini API test failed\",\n      details: error instanceof Error ? error.message : \"Unknown error\",\n    }, 500);\n  }\n});\n\n// Cron job management routes\napp.get(\"/notifications/status\", (c) => {\n  try {\n    const status = paymentCron.getStatus();\n    return c.json(status);\n  } catch (error) {\n    console.error(\"Error getting notification status:\", error);\n    return c.json({ error: \"Failed to get notification status\" }, 500);\n  }\n});\n\napp.post(\"/notifications/trigger\", async (c) => {\n  try {\n    console.log(\"Manual notification trigger requested\");\n    const result = await paymentCron.triggerManualRun();\n    return c.json({\n      message: \"Manual notification run completed\",\n      result,\n    });\n  } catch (error) {\n    console.error(\"Error triggering manual notification:\", error);\n    return c.json({ error: \"Failed to trigger manual notification\" }, 500);\n  }\n});\n\napp.post(\"/notifications/enable\", (c) => {\n  try {\n    paymentCron.setEnabled(true);\n    return c.json({ message: \"Notifications enabled successfully\" });\n  } catch (error) {\n    console.error(\"Error enabling notifications:\", error);\n    return c.json({ error: \"Failed to enable notifications\" }, 500);\n  }\n});\n\napp.post(\"/notifications/disable\", (c) => {\n  try {\n    paymentCron.setEnabled(false);\n    return c.json({ message: \"Notifications disabled successfully\" });\n  } catch (error) {\n    console.error(\"Error disabling notifications:\", error);\n    return c.json({ error: \"Failed to disable notifications\" }, 500);\n  }\n});\n\napp.put(\"/notifications/config\", async (c) => {\n  try {\n    const body = await c.req.json();\n    const { dailyTime, timezone, enabled } = body;\n\n    const updateConfig: any = {};\n    if (dailyTime) updateConfig.dailyTime = dailyTime;\n    if (timezone) updateConfig.timezone = timezone;\n    if (typeof enabled === \"boolean\") updateConfig.enabled = enabled;\n\n    paymentCron.updateConfig(updateConfig);\n\n    return c.json({\n      message: \"Notification configuration updated successfully\",\n      newConfig: paymentCron.getStatus().config,\n    });\n  } catch (error) {\n    console.error(\"Error updating notification config:\", error);\n    return c.json(\n      { error: \"Failed to update notification configuration\" },\n      500\n    );\n  }\n});\n\n\napp.post(\"/test-email\", async (c) => {\n  try {\n    const body = await c.req.json();\n    const { testEmail } = body;\n\n    if (!testEmail) {\n      return c.json({ error: \"testEmail is required\" }, 400);\n    }\n\n    console.log(`🧪 Testing email to: ${testEmail}`);\n\n    \n    const { default: BrevoEmailService } = await import(\n      \"./services/brevoService\"\n    );\n    const brevoService = new BrevoEmailService(process.env.BREVO_API_KEY!);\n\n    const connectionTest = await brevoService.testConnection();\n    if (!connectionTest) {\n      return c.json(\n        {\n          error: \"Brevo connection failed\",\n          details: \"Check your BREVO_API_KEY and Brevo account status\",\n        },\n        500\n      );\n    }\n\n   \n    const testEmailData = {\n      sender: {\n        name: process.env.BREVO_SENDER_NAME || \"Test App\",\n        email: process.env.BREVO_SENDER_EMAIL || \"test@yourapp.com\",\n      },\n      to: [\n        {\n          email: testEmail,\n          name: \"Test User\",\n        },\n      ],\n      subject: \"Test Email from Your Finance App\",\n      htmlContent: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: white;\">\n          <!-- Header -->\n          <div style=\"background-color: #007bff; padding: 20px; text-align: center;\">\n            <h1 style=\"color: white; margin: 0; font-size: 20px;\">🧪 Test Email</h1>\n          </div>\n          \n          <!-- Content -->\n          <div style=\"padding: 30px;\">\n            <h2 style=\"color: #333; margin-top: 0;\">Email System Test</h2>\n            \n            <table style=\"width: 100%; border-collapse: collapse; margin: 20px 0;\">\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Status:</td>\n                <td style=\"padding: 10px 0; text-align: right; color: #28a745; font-weight: bold;\">✅ Working</td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">Timestamp:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${new Date().toLocaleString()}</td>\n              </tr>\n              <tr style=\"border-bottom: 1px solid #eee;\">\n                <td style=\"padding: 10px 0; font-weight: bold;\">From:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">${process.env.BREVO_SENDER_EMAIL}</td>\n              </tr>\n              <tr>\n                <td style=\"padding: 10px 0; font-weight: bold;\">API:</td>\n                <td style=\"padding: 10px 0; text-align: right;\">Brevo</td>\n              </tr>\n            </table>\n\n            <div style=\"margin: 30px 0; padding: 15px; background-color: #e8f5e8; border-radius: 5px;\">\n              <p style=\"margin: 0; color: #666;\">\n                <strong>✅ Success!</strong> If you received this email, your notification system is working correctly.\n              </p>\n            </div>\n          </div>\n          \n          <!-- Footer -->\n          <div style=\"background-color: #f5f5f5; padding: 20px; text-align: center; color: #888; font-size: 12px;\">\n            <p style=\"margin: 0;\">This is a test email from your Finance App notification system.</p>\n            <p style=\"margin: 5px 0 0 0;\">© ${new Date().getFullYear()} Your Finance App. All rights reserved.</p>\n          </div>\n        </div>\n      `,\n      textContent: `\nTest Email from Your Finance App\n\nStatus: ✅ Working\nTimestamp: ${new Date().toLocaleString()}\nFrom: ${process.env.BREVO_SENDER_EMAIL}\nAPI: Brevo\n\n✅ Success! If you received this email, your notification system is working correctly.\n      `,\n      tags: [\"test-email\"],\n    };\n\n    const result = await brevoService.sendTransactionalEmail(testEmailData);\n\n    return c.json({\n      message: \"Test email sent successfully\",\n      result,\n      config: {\n        brevoApiKey: process.env.BREVO_API_KEY\n          ? `${process.env.BREVO_API_KEY.substring(0, 10)}...`\n          : \"MISSING\",\n        senderEmail: process.env.BREVO_SENDER_EMAIL,\n        senderName: process.env.BREVO_SENDER_NAME,\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Test email failed:\", error);\n    return c.json(\n      {\n        error: \"Failed to send test email\",\n        details: error instanceof Error ? error.message : \"Unknown error\",\n      },\n      500\n    );\n  }\n});\n\n\napp.get(\"/test-brevo\", async (c) => {\n  try {\n    const { default: BrevoEmailService } = await import(\n      \"./services/brevoService\"\n    );\n    const brevoService = new BrevoEmailService(process.env.BREVO_API_KEY!);\n\n    const isConnected = await brevoService.testConnection();\n\n    return c.json({\n      brevoConnected: isConnected,\n      config: {\n        apiKeyProvided: !!process.env.BREVO_API_KEY,\n        senderEmail: process.env.BREVO_SENDER_EMAIL,\n        senderName: process.env.BREVO_SENDER_NAME,\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Brevo test failed:\", error);\n    return c.json(\n      {\n        error: \"Brevo test failed\",\n        details: error instanceof Error ? error.message : \"Unknown error\",\n      },\n      500\n    );\n  }\n});\n\n\napp.get(\"/exchange-rates\", async (c) => {\n  try {\n    const response = await fetch(\"https://www.bnr.ro/nbrfxrates.xml\");\n    if (!response.ok) {\n      throw new Error(`Failed to fetch exchange rates: ${response.statusText}`);\n    }\n    const xmlText = await response.text();\n    return c.text(xmlText, 200, {\n      \"Content-Type\": \"application/xml\",\n    });\n  } catch (error) {\n    console.error(\"Proxy error:\", error);\n    return c.json({ error: \"Failed to fetch exchange rates\" }, 500);\n  }\n});\n\napp.get(\"/\", (c) => c.text(\"Server is running\"));\n\n// Start the server\nconsole.log(`Server is running on port ${port}`);\n\n\nif (process.env.GEMINI_API_KEY) {\n  console.log(\"✅ Gemini API key configured\");\n} else {\n  console.log(\"⚠️  Gemini API key not found in environment variables\");\n}\n\n// Start the payment notification cron job\ntry {\n  paymentCron.start();\n  console.log(\"✅ Payment notification cron job started successfully\");\n} catch (error) {\n  console.error(\"❌ Failed to start payment notification cron job:\", error);\n}\n\nserve({\n  fetch: app.fetch,\n  port,\n});\n\n// Graceful shutdown handling\nconst gracefulShutdown = () => {\n  console.log(\"\\n🛑 Shutting down server...\");\n\n  // Stop the cron job\n  try {\n    paymentCron.stop();\n    console.log(\"✅ Payment notification cron job stopped\");\n  } catch (error) {\n    console.error(\"❌ Error stopping cron job:\", error);\n  }\n\n  process.exit(0);\n};\n\n// Handle different shutdown signals\nprocess.on(\"SIGINT\", gracefulShutdown);\nprocess.on(\"SIGTERM\", gracefulShutdown);\nprocess.on(\"SIGQUIT\", gracefulShutdown);\n\nprocess.on(\"uncaughtException\", (error) => {\n  console.error(\"Uncaught Exception:\", error);\n  gracefulShutdown();\n});\n\nprocess.on(\"unhandledRejection\", (reason, promise) => {\n  console.error(\"Unhandled Rejection at:\", promise, \"reason:\", reason);\n  gracefulShutdown();\n});"]}