{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { serve } from \"@hono/node-server\";\nimport { Hono } from \"hono\";\nimport { cors } from \"hono/cors\";\nimport { logger } from \"hono/logger\";\n\nimport accounts from \"./routes/accounts\";\nimport transaction from \"./routes/transaction\";\nimport categories from \"./routes/categories\";\nimport budget from \"./routes/budget\";\nimport payments from \"./routes/payment\";\nimport users from \"./routes/user\";\nimport auth from \"./routes/auth\";\nimport ai from \"./routes/ai\";\n\nimport \"dotenv/config\";\n\nconst app = new Hono();\nconst port = parseInt(process.env.PORT || \"3000\");\n\napp.use(\n  \"*\",\n  cors({\n    origin: [\n      \"http://localhost:5173\",\n      \"http://localhost:3000\",\n      \"http://127.0.0.1:5173\",\n      \"https://finance-app-frontend-bice.vercel.app\",\n      \"https://finance-app-frontend-ebyddx0p1-oroszkrisztians-projects.vercel.app\",\n      \"https://backendfinanceapp.krisztianorosz0.workers.dev\",\n    ],\n    allowMethods: [\"POST\", \"GET\", \"DELETE\", \"PUT\", \"OPTIONS\"],\n    allowHeaders: [\"Content-Type\", \"Authorization\"],\n    credentials: true,\n  })\n);\n\napp.use(\"*\", logger());\n\napp.route(\"/auth\", auth);\napp.route(\"/accounts\", accounts);\napp.route(\"/transaction\", transaction);\napp.route(\"/categories\", categories);\napp.route(\"/budget\", budget);\napp.route(\"/payment\", payments);\napp.route(\"/user\", users);\napp.route(\"/ai\", ai);\n\napp.get(\"/test-gemini\", async (c) => {\n  try {\n    if (!process.env.GEMINI_API_KEY) {\n      return c.json(\n        {\n          success: false,\n          error: \"GEMINI_API_KEY not configured\",\n        },\n        500\n      );\n    }\n\n    const { GoogleGenerativeAI } = await import(\"@google/generative-ai\");\n    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);\n    const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n\n    const result = await model.generateContent(\n      \"Say hello and confirm you're working correctly for financial analysis.\"\n    );\n    const response = await result.response;\n    const text = response.text();\n\n    return c.json({\n      success: true,\n      message: \"Gemini API connection successful\",\n      response: text,\n      config: {\n        apiKeyProvided: !!process.env.GEMINI_API_KEY,\n        keyPrefix: process.env.GEMINI_API_KEY\n          ? process.env.GEMINI_API_KEY.substring(0, 10) + \"...\"\n          : \"MISSING\",\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Gemini test failed:\", error);\n    return c.json(\n      {\n        success: false,\n        error: \"Gemini API test failed\",\n        details: error instanceof Error ? error.message : \"Unknown error\",\n      },\n      500\n    );\n  }\n});\n\napp.get(\"/warmup\", (c) => {\n  console.log(\"🔥 Server warmup request\");\n  return c.json({\n    status: \"warmed\",\n    timestamp: new Date().toISOString(),\n    message: \"Server is now warm and ready\",\n  });\n});\n\napp.get(\"/warmup-full\", async (c) => {\n  const startTime = Date.now();\n\n  try {\n    console.log(\"🔥 Full server warmup started\");\n\n    const { default: ExpenseNotificationService } = await import(\n      \"./services/expenseNotificationService\"\n    );\n    const notificationService = new ExpenseNotificationService(\n      process.env.BREVO_API_KEY!,\n      process.env.BREVO_SENDER_EMAIL || \"noreply@yourfinanceapp.com\",\n      process.env.BREVO_SENDER_NAME || \"Your Finance App\"\n    );\n\n    const { default: BrevoEmailService } = await import(\n      \"./services/brevoService\"\n    );\n    const brevoService = new BrevoEmailService(process.env.BREVO_API_KEY!);\n    await brevoService.testConnection();\n\n    const duration = Date.now() - startTime;\n    console.log(`✅ Full warmup completed in ${duration}ms`);\n\n    return c.json({\n      status: \"fully-warmed\",\n      duration: `${duration}ms`,\n      timestamp: new Date().toISOString(),\n      message: \"Server and all services are warm and ready\",\n    });\n  } catch (error: unknown) {\n    const duration = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.warn(\n      `⚠️ Warmup had issues but server is still warming: ${errorMessage}`\n    );\n\n    return c.json({\n      status: \"partially-warmed\",\n      duration: `${duration}ms`,\n      timestamp: new Date().toISOString(),\n      message: \"Server is warm but some services may need extra time\",\n      warning: errorMessage,\n    });\n  }\n});\n\napp.post(\"/cron/daily-notifications\", async (c) => {\n  const startTime = Date.now();\n\n  try {\n    console.log(\"📧 Daily notification endpoint triggered\");\n\n    const { default: ExpenseNotificationService } = await import(\n      \"./services/expenseNotificationService\"\n    );\n    const notificationService = new ExpenseNotificationService(\n      process.env.BREVO_API_KEY!,\n      process.env.BREVO_SENDER_EMAIL || \"noreply@yourfinanceapp.com\",\n      process.env.BREVO_SENDER_NAME || \"Your Finance App\"\n    );\n\n    const result = await notificationService.sendDailyScheduledNotifications();\n\n    const duration = Date.now() - startTime;\n    console.log(`✅ Daily notifications completed in ${duration}ms:`, result);\n\n    return c.json({\n      success: true,\n      message: \"Daily notifications sent successfully\",\n      result,\n      duration: `${duration}ms`,\n      timestamp: new Date().toISOString(),\n    });\n  } catch (error: unknown) {\n    const duration = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.error(\n      `❌ Daily notification endpoint failed after ${duration}ms:`,\n      errorMessage\n    );\n\n    return c.json(\n      {\n        success: false,\n        error: \"Failed to send daily notifications\",\n        details: errorMessage,\n        duration: `${duration}ms`,\n        timestamp: new Date().toISOString(),\n      },\n      500\n    );\n  }\n});\n\napp.post(\"/cron/automatic-payments\", async (c) => {\n  const startTime = Date.now();\n\n  try {\n    console.log(\"💰 Automatic payments cron job triggered\");\n\n    const { default: AutomaticPaymentService } = await import(\n      \"./services/automaticPaymentService\"\n    );\n    const paymentService = new AutomaticPaymentService();\n\n    const result = await paymentService.processAutomaticPayments();\n\n    const duration = Date.now() - startTime;\n    console.log(\n      `✅ Automatic payments processing completed in ${duration}ms:`,\n      result\n    );\n\n    return c.json({\n      success: true,\n      message: \"Automatic payments processed successfully\",\n      result,\n      duration: `${duration}ms`,\n      timestamp: new Date().toISOString(),\n    });\n  } catch (error: unknown) {\n    const duration = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    console.error(\n      `❌ Automatic payments cron job failed after ${duration}ms:`,\n      errorMessage\n    );\n\n    return c.json(\n      {\n        success: false,\n        error: \"Failed to process automatic payments\",\n        details: errorMessage,\n        duration: `${duration}ms`,\n        timestamp: new Date().toISOString(),\n      },\n      500\n    );\n  }\n});\n\napp.get(\"/test-brevo\", async (c) => {\n  try {\n    const { default: BrevoEmailService } = await import(\n      \"./services/brevoService\"\n    );\n    const brevoService = new BrevoEmailService(process.env.BREVO_API_KEY!);\n\n    const isConnected = await brevoService.testConnection();\n\n    return c.json({\n      brevoConnected: isConnected,\n      config: {\n        apiKeyProvided: !!process.env.BREVO_API_KEY,\n        senderEmail: process.env.BREVO_SENDER_EMAIL,\n        senderName: process.env.BREVO_SENDER_NAME,\n      },\n    });\n  } catch (error) {\n    console.error(\"❌ Brevo test failed:\", error);\n    return c.json(\n      {\n        error: \"Brevo test failed\",\n        details: error instanceof Error ? error.message : \"Unknown error\",\n      },\n      500\n    );\n  }\n});\n\napp.get(\"/exchange-rates\", async (c) => {\n  try {\n    const response = await fetch(\"https://www.bnr.ro/nbrfxrates.xml\");\n    if (!response.ok) {\n      throw new Error(`Failed to fetch exchange rates: ${response.statusText}`);\n    }\n    const xmlText = await response.text();\n    return c.text(xmlText, 200, {\n      \"Content-Type\": \"application/xml\",\n    });\n  } catch (error) {\n    console.error(\"Proxy error:\", error);\n    return c.json({ error: \"Failed to fetch exchange rates\" }, 500);\n  }\n});\n\napp.get(\"/\", (c) => c.text(\"Server is running\"));\n\nconsole.log(`Server is running on port ${port}`);\n\nif (process.env.GEMINI_API_KEY) {\n  console.log(\"✅ Gemini API key configured\");\n} else {\n  console.log(\"⚠️  Gemini API key not found in environment variables\");\n}\n\nserve({\n  fetch: app.fetch,\n  port,\n});\n\nconst gracefulShutdown = () => {\n  console.log(\"\\n🛑 Shutting down server...\");\n  process.exit(0);\n};\n\nprocess.on(\"SIGINT\", gracefulShutdown);\nprocess.on(\"SIGTERM\", gracefulShutdown);\nprocess.on(\"SIGQUIT\", gracefulShutdown);\n\nprocess.on(\"uncaughtException\", (error) => {\n  console.error(\"Uncaught Exception:\", error);\n  gracefulShutdown();\n});\n\nprocess.on(\"unhandledRejection\", (reason, promise) => {\n  console.error(\"Unhandled Rejection at:\", promise, \"reason:\", reason);\n  gracefulShutdown();\n});\n"]}