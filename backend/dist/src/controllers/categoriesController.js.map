{"version":3,"file":"categoriesController.js","sourceRoot":"","sources":["../../../src/controllers/categoriesController.ts"],"names":[],"mappings":";;;AACA,qEAAkE;AAElE,MAAa,oBAAoB;IACvB,iBAAiB,CAAoB;IAC7C;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAiB,EAAE,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,sBAAsB,CAAC,CAAU;QACrC,IAAI,CAAC;YACH,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;YACzE,OAAO,UAAU,CAAC;QACpB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CACT,uDAAuD,EACvD,KAAK,CACN,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,CAAU,EAAE,MAAc;QACtD,IAAI,CAAC;YACH,MAAM,aAAa,GACjB,MAAM,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;YAC/D,OAAO,aAAa,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CACT,wDAAwD,EACxD,KAAK,CACN,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,CAAU,EAAE,MAAc,EAAE,YAAoB;QACvE,IAAI,CAAC;YACH,MAAM,kBAAkB,GACtB,MAAM,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;YACxE,OAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CACT,mDAAmD,EACnD,KAAK,CACN,CAAC;YACF,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;CACF;AA9CD,oDA8CC","sourcesContent":["import { Context } from \"hono\";\nimport { CategoriesService } from \"../services/categoriesService\";\n\nexport class CategoriesController {\n  private categoriesService: CategoriesService;\n  constructor() {\n    this.categoriesService = new CategoriesService();\n  }\n\n  async getAllSystemCategories(c: Context) {\n    try {\n      const categories = await this.categoriesService.getAllSystemCategories();\n      return categories;\n    } catch (error) {\n      console.log(\n        \"Error in CategoriesController.getAllSystemCategories:\",\n        error\n      );\n      throw new Error(\"Failed to get system categories\");\n    }\n  }\n\n  async getAllCategoriesForUser(c: Context, userId: number) {\n    try {\n      const allCategories =\n        await this.categoriesService.getAllCategoriesForUser(userId);\n      return allCategories;\n    } catch (error) {\n      console.log(\n        \"Error in CategoriesController.getAllCategoriesForUser:\",\n        error\n      );\n      throw new Error(\"Failed to get all categories\");\n    }\n  }\n\n  async createUserCategory(c: Context, userId: number, categoryName: string) {\n    try {\n      const createUserCategory =\n        await this.categoriesService.createUserCategory(userId, categoryName);\n      return c.json(createUserCategory);\n    } catch (error) {\n      console.log(\n        \"Error in CategoriesController.createUserCategory:\",\n        error\n      );\n      throw new Error(\"Failed to create user category\");\n    }\n  }\n}\n"]}